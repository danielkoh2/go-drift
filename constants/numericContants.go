package constants

import (
	"driftgo/utils"
	"github.com/gagliardetto/solana-go"
	"math"
)

var ZERO = utils.BN(0)
var ONE = utils.BN(1)
var TWO = utils.BN(2)
var THREE = utils.BN(3)
var FOUR = utils.BN(4)
var FIVE = utils.BN(5)
var SIX = utils.BN(6)
var SEVEN = utils.BN(7)
var EIGHT = utils.BN(8)
var NINE = utils.BN(9)
var TEN = utils.BN(10)
var TEN_THOUSAND = utils.BN(10000)

var BN_MAX = utils.BN(9007199254740991)
var TEN_MILLION = utils.MulX(TEN_THOUSAND, TEN_THOUSAND)

var MAX_LEVERAGE = utils.BN(5)
var MAX_LEVERAGE_ORDER_SIZE = "18446744073709551615"

var PERCENTAGE_PRECISION_EXP = utils.BN(6)
var PERCENTAGE_PRECISION = utils.IntX(PERCENTAGE_PRECISION_EXP)
var CONCENTRATION_PRECISION = utils.IntX(PERCENTAGE_PRECISION)

var QUOTE_PRECISION_EXP = utils.BN(6)
var FUNDING_RATE_BUFFER_PRECISION_EXP = utils.BN(3)
var PRICE_PRECISION_EXP = utils.BN(6)
var FUNDING_RATE_PRECISION_EXP = utils.AddX(utils.IntX(PRICE_PRECISION_EXP), utils.IntX(FUNDING_RATE_BUFFER_PRECISION_EXP))
var PEG_PRECISION_EXP = utils.BN(6)
var AMM_RESERVE_PRECISION_EXP = utils.BN(9)

var SPOT_MARKET_RATE_PRECISION_EXP = utils.BN(6)
var SPOT_MARKET_RATE_PRECISION = utils.BN(100000)

var SPOT_MARKET_CUMULATIVE_INTEREST_PRECISION_EXP = utils.BN(10)
var SPOT_MARKET_CUMULATIVE_INTEREST_PRECISION = utils.BN(10000000000)

var SPOT_MARKET_UTILIZATION_PRECISION_EXP = utils.BN(6)
var SPOT_MARKET_UTILIZATION_PRECISION = utils.BN(100000)

var SPOT_MARKET_WEIGHT_PRECISION = utils.BN(10000)
var SPOT_MARKET_BALANCE_PRECISION_EXP = utils.BN(9)
var SPOT_MARKET_BALANCE_PRECISION = utils.BN(1000000000)
var SPOT_MARKET_IMF_PRECISION_EXP = utils.BN(6)
var SPOT_MARKET_IMF_PRECISION = utils.BN(1000000)
var LIQUIDATION_FEE_PRECISION = utils.BN(1000000)

var QUOTE_PRECISION = utils.PowX(utils.BN(10), QUOTE_PRECISION_EXP)
var PRICE_PRECISION = utils.PowX(utils.BN(10), PRICE_PRECISION_EXP)
var FUNDING_RATE_PRECISION = utils.PowX(utils.BN(10), FUNDING_RATE_PRECISION_EXP)
var FUNDING_RATE_BUFFER_PRECISION = utils.PowX(utils.BN(10), FUNDING_RATE_BUFFER_PRECISION_EXP)
var PEG_PRECISION = utils.PowX(utils.BN(10), PEG_PRECISION_EXP)

var AMM_RESERVE_PRECISION = utils.PowX(utils.BN(10), AMM_RESERVE_PRECISION_EXP)

var BASE_PRECISION = utils.IntX(AMM_RESERVE_PRECISION)
var BASE_PRECISION_EXP = utils.IntX(AMM_RESERVE_PRECISION_EXP)

var AMM_TO_QUOTE_PRECISION_RATIO = utils.DivX(AMM_RESERVE_PRECISION, QUOTE_PRECISION)
var PRICE_DIV_PEG = utils.DivX(PRICE_PRECISION, PEG_PRECISION)              //10^1
var PRICE_TO_QUOTE_PRECISION = utils.DivX(PRICE_PRECISION, QUOTE_PRECISION) // 10^1
var AMM_TIMES_PEG_TO_QUOTE_PRECISION_RATIO = utils.DivX(
	utils.MulX(
		AMM_RESERVE_PRECISION,
		PEG_PRECISION,
	),
	QUOTE_PRECISION,
) // 10^9
var MARGIN_PRECISION = utils.IntX(TEN_THOUSAND)
var BID_ASK_SPREAD_PRECISION = utils.BN(1000000) // 10^6
var LIQUIDATION_PCT_PRECISION = utils.IntX(TEN_THOUSAND)
var FUNDING_RATE_OFFSET_DENOMINATOR = utils.BN(5000)

var FIVE_MINUTE = utils.BN(60 * 5)
var ONE_HOUR = utils.BN(60 * 60)
var ONE_YEAR = utils.BN(31536000)

var QUOTE_SPOT_MARKET_INDEX = uint16(0)

var LAMPORTS_PRECISION = utils.BN(int64(solana.LAMPORTS_PER_SOL))
var LAMPORTS_EXP = utils.BN(int64(math.Log10(float64(solana.LAMPORTS_PER_SOL))))

var OPEN_ORDER_MARGIN_REQUIREMENT = utils.DivX(QUOTE_PRECISION, utils.BN(100))

var DEFAULT_REVENUE_SINCE_LAST_FUNDING_SPREAD_RETREAT = utils.MulX(utils.BN(-25), QUOTE_PRECISION)

var ACCOUNT_AGE_DELETION_CUTOFF_SECONDS = 60 * 60 * 24 * 13 // 13 days
var IDLE_TIME_SLOTS = 9000

var SLOT_TIME_ESTIMATE_MS = 400
