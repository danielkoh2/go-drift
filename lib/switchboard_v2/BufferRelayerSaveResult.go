// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package switchboard_v2

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// BufferRelayerSaveResult is the `bufferRelayerSaveResult` instruction.
type BufferRelayerSaveResult struct {
	Params *BufferRelayerSaveResultParams

	// [0] = [WRITE] bufferRelayer
	//
	// [1] = [SIGNER] oracleAuthority
	//
	// [2] = [] oracle
	//
	// [3] = [WRITE] oracleQueue
	//
	// [4] = [WRITE] dataBuffer
	//
	// [5] = [] queueAuthority
	//
	// [6] = [WRITE] permission
	//
	// [7] = [WRITE] escrow
	//
	// [8] = [WRITE] oracleWallet
	//
	// [9] = [] programState
	//
	// [10] = [] tokenProgram
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewBufferRelayerSaveResultInstructionBuilder creates a new `BufferRelayerSaveResult` instruction builder.
func NewBufferRelayerSaveResultInstructionBuilder() *BufferRelayerSaveResult {
	nd := &BufferRelayerSaveResult{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 11),
	}
	return nd
}

// SetParams sets the "params" parameter.
func (inst *BufferRelayerSaveResult) SetParams(params BufferRelayerSaveResultParams) *BufferRelayerSaveResult {
	inst.Params = &params
	return inst
}

// SetBufferRelayerAccount sets the "bufferRelayer" account.
func (inst *BufferRelayerSaveResult) SetBufferRelayerAccount(bufferRelayer ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(bufferRelayer).WRITE()
	return inst
}

// GetBufferRelayerAccount gets the "bufferRelayer" account.
func (inst *BufferRelayerSaveResult) GetBufferRelayerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetOracleAuthorityAccount sets the "oracleAuthority" account.
func (inst *BufferRelayerSaveResult) SetOracleAuthorityAccount(oracleAuthority ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(oracleAuthority).SIGNER()
	return inst
}

// GetOracleAuthorityAccount gets the "oracleAuthority" account.
func (inst *BufferRelayerSaveResult) GetOracleAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetOracleAccount sets the "oracle" account.
func (inst *BufferRelayerSaveResult) SetOracleAccount(oracle ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(oracle)
	return inst
}

// GetOracleAccount gets the "oracle" account.
func (inst *BufferRelayerSaveResult) GetOracleAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetOracleQueueAccount sets the "oracleQueue" account.
func (inst *BufferRelayerSaveResult) SetOracleQueueAccount(oracleQueue ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(oracleQueue).WRITE()
	return inst
}

// GetOracleQueueAccount gets the "oracleQueue" account.
func (inst *BufferRelayerSaveResult) GetOracleQueueAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetDataBufferAccount sets the "dataBuffer" account.
func (inst *BufferRelayerSaveResult) SetDataBufferAccount(dataBuffer ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(dataBuffer).WRITE()
	return inst
}

// GetDataBufferAccount gets the "dataBuffer" account.
func (inst *BufferRelayerSaveResult) GetDataBufferAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetQueueAuthorityAccount sets the "queueAuthority" account.
func (inst *BufferRelayerSaveResult) SetQueueAuthorityAccount(queueAuthority ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(queueAuthority)
	return inst
}

// GetQueueAuthorityAccount gets the "queueAuthority" account.
func (inst *BufferRelayerSaveResult) GetQueueAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetPermissionAccount sets the "permission" account.
func (inst *BufferRelayerSaveResult) SetPermissionAccount(permission ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(permission).WRITE()
	return inst
}

// GetPermissionAccount gets the "permission" account.
func (inst *BufferRelayerSaveResult) GetPermissionAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetEscrowAccount sets the "escrow" account.
func (inst *BufferRelayerSaveResult) SetEscrowAccount(escrow ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(escrow).WRITE()
	return inst
}

// GetEscrowAccount gets the "escrow" account.
func (inst *BufferRelayerSaveResult) GetEscrowAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetOracleWalletAccount sets the "oracleWallet" account.
func (inst *BufferRelayerSaveResult) SetOracleWalletAccount(oracleWallet ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(oracleWallet).WRITE()
	return inst
}

// GetOracleWalletAccount gets the "oracleWallet" account.
func (inst *BufferRelayerSaveResult) GetOracleWalletAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetProgramStateAccount sets the "programState" account.
func (inst *BufferRelayerSaveResult) SetProgramStateAccount(programState ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(programState)
	return inst
}

// GetProgramStateAccount gets the "programState" account.
func (inst *BufferRelayerSaveResult) GetProgramStateAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetTokenProgramAccount sets the "tokenProgram" account.
func (inst *BufferRelayerSaveResult) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *BufferRelayerSaveResult {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "tokenProgram" account.
func (inst *BufferRelayerSaveResult) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

func (inst BufferRelayerSaveResult) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_BufferRelayerSaveResult,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst BufferRelayerSaveResult) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *BufferRelayerSaveResult) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.Params == nil {
			return errors.New("Params parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.BufferRelayer is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.OracleAuthority is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.Oracle is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.OracleQueue is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.DataBuffer is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.QueueAuthority is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.Permission is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.Escrow is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.OracleWallet is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.ProgramState is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
	}
	return nil
}

func (inst *BufferRelayerSaveResult) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("BufferRelayerSaveResult")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("Params", *inst.Params))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=11]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("  bufferRelayer", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("oracleAuthority", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("         oracle", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("    oracleQueue", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("     dataBuffer", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta(" queueAuthority", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("     permission", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("         escrow", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("   oracleWallet", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("   programState", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("   tokenProgram", inst.AccountMetaSlice.Get(10)))
					})
				})
		})
}

func (obj BufferRelayerSaveResult) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Params` param:
	err = encoder.Encode(obj.Params)
	if err != nil {
		return err
	}
	return nil
}
func (obj *BufferRelayerSaveResult) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Params`:
	err = decoder.Decode(&obj.Params)
	if err != nil {
		return err
	}
	return nil
}

// NewBufferRelayerSaveResultInstruction declares a new BufferRelayerSaveResult instruction with the provided parameters and accounts.
func NewBufferRelayerSaveResultInstruction(
	// Parameters:
	params BufferRelayerSaveResultParams,
	// Accounts:
	bufferRelayer ag_solanago.PublicKey,
	oracleAuthority ag_solanago.PublicKey,
	oracle ag_solanago.PublicKey,
	oracleQueue ag_solanago.PublicKey,
	dataBuffer ag_solanago.PublicKey,
	queueAuthority ag_solanago.PublicKey,
	permission ag_solanago.PublicKey,
	escrow ag_solanago.PublicKey,
	oracleWallet ag_solanago.PublicKey,
	programState ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey) *BufferRelayerSaveResult {
	return NewBufferRelayerSaveResultInstructionBuilder().
		SetParams(params).
		SetBufferRelayerAccount(bufferRelayer).
		SetOracleAuthorityAccount(oracleAuthority).
		SetOracleAccount(oracle).
		SetOracleQueueAccount(oracleQueue).
		SetDataBufferAccount(dataBuffer).
		SetQueueAuthorityAccount(queueAuthority).
		SetPermissionAccount(permission).
		SetEscrowAccount(escrow).
		SetOracleWalletAccount(oracleWallet).
		SetProgramStateAccount(programState).
		SetTokenProgramAccount(tokenProgram)
}
